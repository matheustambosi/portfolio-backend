name: Compilar e implantar o aplicativo .NET Core no Aplicativo Web AtletiGo com o Serviço de Gerenciamento de API AtletiGoApi – AtletiGo
on:
  push:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: AtletiGo
  AZURE_WEBAPP_PACKAGE_PATH: AtletiGo/publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: atletigo-api_group
  AZURE_APIM_SERVICENAME: AtletiGoApi
  AZURE_APIM_API_ID: AtletiGo
  AZURE_APIM_APPSERVICEURL: https://atletigo.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 5.6.3
  SWASHBUCKLE_DOTNET_CORE_VERSION: 3.1.x
  API_IMPORT_SPECIFICATION_PATH: AtletiGo/publish/swagger.json
  API_IMPORT_DLL: AtletiGo/bin/Release/netcoreapp3.1/AtletiGo.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 3.1.x
  WORKING_DIRECTORY: AtletiGo
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.0
      with:
        include-prerelease: True
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Setup SwashBuckle .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}
    - name: Build
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build
    - name: Publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Install Swashbuckle CLI .NET Global Tool
      run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}
      working-directory: ${{ env.WORKING_DIRECTORY }}
    - name: Generate Open API Specification Document
      run: swagger tofile --output "${{ env.API_IMPORT_SPECIFICATION_PATH }}" "${{ env.API_IMPORT_DLL }}" "${{ env.API_IMPORT_VERSION }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  sonarcloud_analysis:
    name: codecov/sonarcloud nalysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Run Tests and Generate Coverage
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AtletiGo_9131 }}
